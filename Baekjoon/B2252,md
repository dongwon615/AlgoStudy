# 백준 2252번 문제 - 줄 세우기
## Topology Sort 처음 풀어봄,, 진입차수가 없는것은 앞에 쓰면 됨. 따라서 진입차수가 0인것을 큐에 넣고 꺼내면서 연결되어있는 노드의 진입차수를 줄이다보면 노드가 진입차수가 0이됨. 이걸 반복하면 쉽게 정리 가능.

``` java
package Baekjoon;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.StringTokenizer;

public class B2252 {
	public static void main(String[] args) throws Exception {
		// 앞에 숫자가 젤 많은 애를 제일 앞에 세워,, 그러고 뒤에애를 땡겨 그러고 또 젤 많은거 해보면 될,,런지
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken()) + 1;
		int m = Integer.parseInt(st.nextToken());
		Queue<Integer>[] nums = new LinkedList[n];
		for (int i = 1; i < n; i++) {
			nums[i] = new LinkedList<>();
			nums[i].offer(i);
		}
		int[] numscnt = new int[n];
		int ti1,ti2;
		for (int i = 0; i < m; i++) {
			st = new StringTokenizer(br.readLine());
			ti1 = Integer.parseInt(st.nextToken());
			ti2 = Integer.parseInt(st.nextToken());
			nums[ti1].offer(ti2);
			numscnt[ti2]++;
		}
		StringBuilder sb = new StringBuilder();
		Queue<Queue> topologySort = new LinkedList<>();
		for (int i = 1; i < n; i++) {
			// 진입차수가 0이면
			if (numscnt[i] == 0) {
				// 진출차수가 있는애들은 queue에 넣어야함.
				if (nums[i].size() > 1) {
					topologySort.offer(nums[i]);
					continue;
				}
				// 진출차수 없으면 그냥 아무데나 들어가두됨. 지금 넣어버려
				sb.append(nums[i].poll() + " ");
			}
		}
		
		int ti;
		//topology 큐에 들어있는 애가 없을때까지 돌려
		while(!topologySort.isEmpty()) {
			Queue<Integer> tq = topologySort.poll();
			// 젤앞에 숫자 나온거 적고
			ti = tq.poll();
			sb.append(ti + " ");
			// 뒤에 들어있는애들은 연결을 끊어주는거임. 그러면 진입차수가 줄어들고 0이 되는애가 생기면 topology 큐에 넣어주면됨
			while(!tq.isEmpty()) {
				ti = tq.poll();
				numscnt[ti]--;
				if(numscnt[ti] == 0) {
					topologySort.offer(nums[ti]);
				}
			}
		}
		System.out.println(sb);
	}
}
```

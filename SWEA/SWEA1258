import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.StringTokenizer;

public class SWEA1258 {
	static class Data{
		int x;
		int y;
		int size;
		public Data(int x, int y, int size) {
			this.x = x;
			this.y = y;
			this.size = size;
		}
		
	}
	static int n;
	static int[][] map;
	static boolean[][] v;
	static List<Data> list;
	
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		int tc = Integer.parseInt(br.readLine());
		for(int t = 1; t <= tc; t++) {
			n = Integer.parseInt(br.readLine());
			map = new int[n][n];
			v = new boolean[n][n];
			list = new ArrayList<>();
			for(int i = 0; i < n; i++) {
				st = new StringTokenizer(br.readLine(), " ");
				for(int j = 0; j < n; j++) {
					map[i][j] = Integer.parseInt(st.nextToken());
				}
			}
			
			for(int i = 0; i < n; i++) {
				for(int j = 0; j < n; j++) {
					if(map[i][j] != 0 && !v[i][j]) {
						searchRec(i,j);
					}
				}
			}
			Collections.sort(list,new Comparator<Data>() {

				@Override
				public int compare(Data o1, Data o2) {
					if(o1.size < o2.size) {
						return -1;
					}else if(o1.size == o2.size) {
						if(o1.y < o2.y) {
							return -1;
						}
					}
					return 1;
				}
			});
			System.out.print("#" + t + " " + list.size() + " ");
			for(Data d : list) {
				System.out.print(d.y + " " + d.x + " ");
			}
			System.out.println();
		}
	}

	private static void searchRec(int i, int j) {
		int xnum = 0;
		int ynum = 0;
		int x = j;
		int y = i;
		while(true) {
			if(x >= n || map[i][x++] == 0) {
				break;
			}
			xnum++;
		}
		while(true) {
			if(y >= n || map[y++][j] == 0) {
				break;
			}
			ynum++;
		}
		for(int fi = 0; fi < ynum; fi++) {
			for(int fj = 0; fj < xnum; fj++) {
				v[i+fi][j+fj] = true;
			}
		}
		list.add(new Data(xnum,ynum,xnum*ynum));
	}
}
